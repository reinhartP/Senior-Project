{"version":3,"sources":["components/Navbar.js","components/HomeFeatures.js","containers/Home.js","containers/Signup.js","containers/Login.js","components/ProfilePlaylistInfo.js","components/ProfileSpotifyInfo.js","components/ProfileAccountInfo.js","containers/Profile.js","containers/Youtube.js","containers/AfterAuth.js","routes.js","containers/App.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","value","handleMenuClick","e","_ref","activeMenu","hideFixedMenu","fixed","showFixedMenu","state","user","location","pathname","searchPlaylists","bind","assertThisInitialized","_this2","axios","get","concat","then","response","sendDataToParent","data","react_default","a","createElement","Menu","inverted","size","Container","fluid","Item","active","href","position","style","borderRadius","className","marginTop","marginBottom","paddingRight","type","placeholder","onChange","Button","onClick","onMouseDown","preventDefault","Component","Features","Grid","centered","columns","paddingTop","Row","Column","width","Segment","textAlign","height","Divider","Home","document","body","background","Helmet","content","Navbar","minHeight","text","color","index_es","icon","faMusic","HomeFeatures","bottom","divided","Signup","username","email","password","messageFromServer","showError","registerError","emailError","usernameError","registerUser","post","console","log","message","catch","err","_this$state","faSignInAlt","Form","onSubmit","Field","margin","react_router_dom","textDecoration","to","Login","loggedIn","loginUser","localStorage","setItem","token","error","react_router","PlaylistInfo","handleClick","titleProps","index","newIndex","activeIndex","playlists","length","Card","Content","Header","Accordion","styled","map","songs","songsIndex","key","playlist_name","Title","Icon","song","songIndex","song_name","artist_name","SpotifyInfo","handleShow","handleHide","connected","spotifyAuth","isLoading","progress","connectSpotify","updatePlaylists","accessString","getItem","headers","Authorization","link","newWindow","window","open","timer","setInterval","closed","clearInterval","_this3","playlist","spotifyPlaylistName","_this4","faSpotify","loading","List","syncPlaylist","total","number_of_songs","Progress","percent","indicating","AccountInfo","faUser","wordWrap","id","ProfileInfo","logout","auth","removeItem","_this$props$state","maxWidth","paddingBottom","GridRow","faAnchor","GridColumn","ProfileAccountInfo","ProfilePlaylistInfo","ProfileSpotifyInfo","syncPlaylists","Profile","handleSearch","Profile_ProfileInfo","AsyncTypeahead","asyncContainer","Typeahead","Queue","videoPlaylist","video","paddingLeft","whiteSpace","verticalAlign","as","overflow","marginLeft","marginRight","removeFromQueue","src","thumbnail","title","substring","PlaylistSongs","panes","menuItem","render","Tab","Pane","overflowY","vertical","Youtube","handleInputChange","input","searchString","handleOnKeyDown","keyCode","searchSong","videoId","userPlaylists","player","options","socket","undefined","host","onStateChange","onReady","nextSong","clearQueue","syncHost","handlePlaylistClick","sortSongs","socketIOClient","emit","on","queue","seekTo","currentTime","getCurrentTime","Math","abs","playVideo","currentState","getPlayerState","playerState","pauseVideo","requestingSocket","time","setVolume","arguments","compareArtist","b","compareSong","toUpperCase","forEach","sort","search","typeahead","getInstance","clear","action","splice","stackable","ref","align","autoFocus","onInputChange","autoComplete","useCache","onSearch","query","labelKey","option","YouTube","containerClassName","opts","playerVars","autoplay","floated","backgroundColor","borderColor","visibility","display","minWidth","overflowX","menu","attached","tabular","secondary","Page","Youtube_Youtube","AfterAuth","opener","focus","close","Routes","exact","path","component","App","routes","ReactDOM","src_containers_App","getElementById"],"mappings":"4bA8LeA,cAvLX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAmBVQ,aAAe,SAAAC,GAAI,OAAI,SAAAC,GACnBT,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACKO,EAAOC,EAAMG,OAAOC,UAtBVb,EA0BnBc,gBAAkB,SAACC,EAADC,GAAiB,IAAXR,EAAWQ,EAAXR,KACpBR,EAAKU,SAAS,CACVO,WAAYT,KA5BDR,EAgCnBkB,cAAgB,kBAAMlB,EAAKU,SAAS,CAAES,OAAO,KAhC1BnB,EAiCnBoB,cAAgB,kBAAMpB,EAAKU,SAAS,CAAES,OAAO,KA/BzCnB,EAAKqB,MAAQ,CACTC,KAAMtB,EAAKD,MAAMuB,KACjBH,OAAO,EACPF,WAAYjB,EAAKD,MAAMwB,SAASC,UAGpCxB,EAAKyB,gBAAkBzB,EAAKyB,gBAAgBC,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAKc,gBAAkBd,EAAKc,gBAAgBY,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAKO,aAAeP,EAAKO,aAAamB,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAVLA,iFAYD,IAAA4B,EAAAzB,KACd0B,IACKC,IADL,2BAAAC,OACoC5B,KAAKkB,MAAMC,OAC1CU,KAAK,SAAAC,GACFL,EAAK7B,MAAMmC,iBAAiBD,EAASE,yCAkBxC,IACGX,EAAarB,KAAKJ,MAAMwB,SAAxBC,SACAP,EAAed,KAAKkB,MAApBJ,WACR,OAAQO,GACJ,IAAK,IACD,OACIY,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,EAAMC,KAAK,SACvBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWC,OAAO,GACdP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,OACLqC,OAAuB,UAAf5B,EACR6B,KAAK,MAETV,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,UACLqC,OAAuB,aAAf5B,EACR6B,KAAK,aAGTV,EAAAC,EAAAC,cAACC,EAAA,EAAKA,KAAN,CAAWQ,SAAS,SAChBX,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,QACLqC,OAAuB,WAAf5B,EACR6B,KAAK,WAETV,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,SACLqC,OAAuB,YAAf5B,EACR6B,KAAK,eAM7B,IAAK,SAwBL,IAAK,UACD,OACIV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,EAAMC,KAAK,SACvBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWC,OAAO,GACdP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,OACLqC,OAAuB,UAAf5B,EACR6B,KAAK,MAETV,EAAAC,EAAAC,cAACC,EAAA,EAAKA,KAAN,CAAWQ,SAAS,SAChBX,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,QACLqC,OAAuB,WAAf5B,EACR6B,KAAK,WAETV,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,SACLqC,OAAuB,YAAf5B,EACR6B,KAAK,eAM7B,IAAK,WACD,OACIV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,UAAU,EACVC,KAAK,QACLO,MAAO,CAAEC,aAAc,QAEvBb,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWC,OAAO,GACdP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,OACLqC,OAAuB,UAAf5B,EACR6B,KAAK,MAETV,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,UACLqC,OAAuB,aAAf5B,EACR6B,KAAK,aAGTV,EAAAC,EAAAC,cAACC,EAAA,EAAKA,KAAN,CAAWQ,SAAS,SAChBX,EAAAC,EAAAC,cAAA,OACIY,UAAU,kBACVF,MAAO,CACHG,UAAW,OACXC,aAAc,OACdC,aAAc,SAGlBjB,EAAAC,EAAAC,cAAA,SACIgB,KAAK,OACLC,YAAY,gBACZC,SAAUrD,KAAKI,aAAa,UAEhC6B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIP,UAAU,gCACVI,KAAK,SACLI,QAASvD,KAAKsB,gBACdkC,YAAa,SAAA5C,GAAC,OAAIA,EAAE6C,mBAJxB,cAaxB,IAAK,WACD,OACIxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,EAAMC,KAAK,SACvBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWC,OAAO,GACdP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,OACLqC,OAAuB,UAAf5B,EACR6B,KAAK,MAETV,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACIpC,KAAK,UACLqC,OAAuB,aAAf5B,EACR6B,KAAK,uBA/KhBe,+BCiDNC,mLAjDP,OACI1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAQ,QAAQjB,MAAO,CAAEkB,WAAY,SAChD9B,EAAAC,EAAAC,cAACyB,EAAA,EAAKI,IAAN,KACI/B,EAAAC,EAAAC,cAACyB,EAAA,EAAKK,OAAN,CAAaC,MAAO,GAChBjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAStB,MAAO,CAAEuB,UAAW,OAAQC,OAAQ,SACzCpC,EAAAC,EAAAC,cAAA,iEAIAF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,SAbV,WAaU,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,gCAIZF,EAAAC,EAAAC,cAACyB,EAAA,EAAKK,OAAN,CAAaC,MAAO,GAChBjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAStB,MAAO,CAAEuB,UAAW,OAAQC,OAAQ,SACzCpC,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBACWF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,YAAR,SAEXV,EAAAC,EAAAC,cAAA,sEAIAF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAAA,yEAIAF,EAAAC,EAAAC,cAAA,uFAtCTuB,aC6ERa,8LAvEPC,SAASC,KAAK5B,MAAM6B,WAAa,2CAGjC,OACIzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwC,EAAA,OAAD,KACI1C,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,QACI9B,KAAK,cACLuE,QAAQ,4FAGhB3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAQzD,SAAUpB,KAAKJ,MAAMwB,WAC7Ba,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIC,OAAO,EACP4B,UAAU,SACVvB,MAAO,CAAEiC,UAAW,IAAKf,WAAY,QAErC9B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWwC,MAAI,EAAClC,MAAO,CAAEkB,WAAY,SACjC9B,EAAAC,EAAAC,cAAA,MAAIU,MAAO,CAAEmC,MAAO,UAChB/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAiBC,KAAMC,MAD3B,wBAIAlD,EAAAC,EAAAC,cAAA,MAAIU,MAAO,CAAEmC,MAAO,UAApB,gCAGA/C,EAAAC,EAAAC,cAAA,MAAIU,MAAO,CAAEmC,MAAO,UAApB,8DAKJ/C,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAAA,UACIU,MAAO,CACHD,SAAU,WACVyC,OAAQ,IACRnB,MAAO,OACPG,OAAQ,OACRW,MAAO,UAGX/C,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACIC,UAAQ,EACRyB,SAAO,EACPjD,UAAQ,EACRyB,QAAQ,QACRjB,MAAO,CAAEwB,OAAQ,SAEjBpC,EAAAC,EAAAC,cAACyB,EAAA,EAAKK,OAAN,CAAaC,MAAO,GAChBjC,EAAAC,EAAAC,cAAA,6JAQJF,EAAAC,EAAAC,cAACyB,EAAA,EAAKK,OAAN,CAAaC,MAAO,GAChBjC,EAAAC,EAAAC,cAAA,wEA5DbuB,sBCoKJ6B,cAlKX,SAAAA,EAAY3F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuF,IACf1F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyF,GAAApF,KAAAH,KAAMJ,KAgBVQ,aAAe,SAAAC,GAAI,OAAI,SAAAC,GACnBT,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACKO,EAAOC,EAAMG,OAAOC,UAhBzBb,EAAKqB,MAAQ,CACTsE,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,kBAAmB,GACnBC,WAAW,EACXC,eAAe,EACfC,YAAY,EACZC,eAAe,GAEnBlG,EAAKO,aAAeP,EAAKO,aAAamB,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAKmG,aAAenG,EAAKmG,aAAazE,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAdLA,4EAuBNe,GAAG,IAAAa,EAAAzB,KACZY,EAAE6C,iBACF/B,IACKuE,KAAK,SAAU,CACZT,SAAUxF,KAAKkB,MAAMsE,SACrBC,MAAOzF,KAAKkB,MAAMuE,MAClBC,SAAU1F,KAAKkB,MAAMwE,WAExB7D,KAAK,SAAAC,GACFoE,QAAQC,IAAI,WAAYrE,GACF,2BAAlBA,EAASE,KACTP,EAAKlB,SAAS,CACVqF,WAAW,EACXE,YAAY,EACZC,eAAe,EACfF,eAAe,IAEM,8BAAlB/D,EAASE,KAChBP,EAAKlB,SAAS,CACVqF,WAAW,EACXE,YAAY,EACZC,eAAe,EACfF,eAAe,IAGD,gCAAlB/D,EAASE,MACS,wBAAlBF,EAASE,KAETP,EAAKlB,SAAS,CACVqF,WAAW,EACXE,YAAY,EACZC,eAAe,EACfF,eAAe,IAGnBpE,EAAKlB,SAAS,CACVoF,kBAAmB7D,EAASE,KAAKoE,QACjCR,WAAW,EACXE,YAAY,EACZC,eAAe,EACfF,eAAe,MAI1BQ,MAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,EAAItE,yCAG7B,IAAAuE,EAODvG,KAAKkB,MALLyE,EAFCY,EAEDZ,kBACAC,EAHCW,EAGDX,UACAC,EAJCU,EAIDV,cACAC,EALCS,EAKDT,WACAC,EANCQ,EAMDR,cAGJ,MAA0B,KAAtBJ,EAEI1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0C,EAAD,CAAQzD,SAAUpB,KAAKJ,MAAMwB,WAC7Ba,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACAQ,UAAU,yBACVF,MAAO,CAAEkB,WAAY,OAAQK,UAAW,SAEpCnC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAiBC,KAAMsB,MAD3B,WAGAvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,SAAU1G,KAAKgG,cACjB/D,EAAAC,EAAAC,cAACsE,EAAA,EAAKE,MAAN,KACI1E,EAAAC,EAAAC,cAAA,SACIgB,KAAK,QACLC,YAAY,cACZC,SAAUrD,KAAKI,aAAa,YAGpC6B,EAAAC,EAAAC,cAACsE,EAAA,EAAKE,MAAN,KACI1E,EAAAC,EAAAC,cAAA,SACIgB,KAAK,OACLC,YAAY,iBACZC,SAAUrD,KAAKI,aAAa,eAGpC6B,EAAAC,EAAAC,cAACsE,EAAA,EAAKE,MAAN,KACI1E,EAAAC,EAAAC,cAAA,SACIgB,KAAK,WACLC,YAAY,WACZC,SAAUrD,KAAKI,aAAa,eAGpC6B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ0B,MAAM,SAAS7B,KAAK,UAA5B,YAIW,IAAdyC,IAAwC,IAAlBC,GACnB5D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iEAMO,IAAdyD,IAAqC,IAAfE,GACnB7D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4EAMO,IAAdyD,IAAwC,IAAlBG,GACnB9D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gFAUS,iBAAtBwD,EAEH1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,MAAO,CAAE+D,OAAQ,QACrB3E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACIhE,MAAO,CAAEiE,eAAgB,OAAQ9B,MAAO,SACxC+B,GAAG,UAFP,gBALT,SAjJMrD,aCgGNsD,cA/FX,SAAAA,EAAYpH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgH,IACfnH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkH,GAAA7G,KAAAH,KAAMJ,KAaVQ,aAAe,SAAAC,GAAI,OAAI,SAAAC,GACnBT,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACKO,EAAOC,EAAMG,OAAOC,UAbzBb,EAAKqB,MAAQ,CACTsE,SAAU,GACVE,SAAU,GACVE,WAAW,EACXqB,UAAU,GAGdpH,EAAKqH,UAAYrH,EAAKqH,UAAU3F,KAAfzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACjBA,EAAKO,aAAeP,EAAKO,aAAamB,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAXLA,yEAoBTe,GAAG,IAAAa,EAAAzB,KACTY,EAAE6C,iBAEF/B,IACKuE,KAAK,QAAS,CACXT,SAAUxF,KAAKkB,MAAMsE,SACrBE,SAAU1F,KAAKkB,MAAMwE,WAExB7D,KAAK,SAAAC,GAEoB,iBAAlBA,EAASE,MACS,2BAAlBF,EAASE,KAETP,EAAKlB,SAAS,CAAEqF,WAAW,KAE3BuB,aAAaC,QAAQ,WAAYtF,EAASE,KAAKqF,OAC/C5F,EAAKlB,SAAS,CACV0G,UAAU,EACVrB,WAAW,OAItBS,MAAM,SAAAiB,GACHpB,QAAQC,IAAImB,EAAMtF,yCAIrB,IAAAuE,EAC2BvG,KAAKkB,MAA7B0E,EADHW,EACGX,UAER,OAHKW,EACcU,SA0CRhF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAUR,GAAG,aAtChB9E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0C,EAAD,CAAQzD,SAAUpB,KAAKJ,MAAMwB,WAC7Ba,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIM,MAAO,CAAEkB,WAAY,OAAQK,UAAW,SAExCnC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAiBC,KAAMsB,MAD3B,UAGAvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,SAAU1G,KAAKkH,WACjBjF,EAAAC,EAAAC,cAACsE,EAAA,EAAKE,MAAN,KACI1E,EAAAC,EAAAC,cAAA,SAAOU,MAAO,CAAEmC,MAAO,UAAvB,YAGA/C,EAAAC,EAAAC,cAAA,SACIgB,KAAK,OACLC,YAAY,iBACZC,SAAUrD,KAAKI,aAAa,eAGpC6B,EAAAC,EAAAC,cAACsE,EAAA,EAAKE,MAAN,KACI1E,EAAAC,EAAAC,cAAA,SAAOU,MAAO,CAAEmC,MAAO,UAAvB,YAGA/C,EAAAC,EAAAC,cAAA,SACIgB,KAAK,WACLC,YAAY,WACZC,SAAUrD,KAAKI,aAAa,eAGpC6B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ0B,MAAM,SAAS7B,KAAK,UAA5B,WAIHyC,GAAa3D,EAAAC,EAAAC,cAAA,kDAtFlBuB,iFC2DL8D,cA9DX,SAAAA,EAAY5H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,IACf3H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0H,GAAArH,KAAAH,KAAMJ,KAOV6H,YAAc,SAAC7G,EAAG8G,GAAe,IACrBC,EAAUD,EAAVC,MAEFC,EADiB/H,EAAKqB,MAArB2G,cAC0BF,GAAS,EAAIA,EAE9C9H,EAAKU,SAAS,CAAEsH,YAAaD,KAX7B/H,EAAKqB,MAAQ,CACT2G,YAAa,IAEjBhI,EAAK4H,YAAc5H,EAAK4H,YAAYlG,KAAjBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IALJA,wEAgBV,IAAA4B,EAAAzB,KACG8H,EAAc9H,KAAKJ,MAAnBkI,UAER,OAAGA,EAAUC,OAAS,EAEd9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAMxF,OAAK,GACXP,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,KACIhG,EAAAC,EAAAC,cAAC6F,EAAA,EAAKE,OAAN,KACIjG,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAiBC,KAAMC,MAD3B,eAIJlD,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,KACIhG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAW3F,OAAK,EAAC4F,QAAM,GAClBN,EAAUO,IAAI,SAACC,EAAOC,GAAR,OACXtG,EAAAC,EAAAC,cAAA,OAAKqG,IAAKF,EAAM,GAAGG,cAAgB,QACnCxG,EAAAC,EAAAC,cAACgG,EAAA,EAAUO,MAAX,CAAiBhG,OAAQjB,EAAKP,MAAM2G,cAAgBU,EAAYZ,MAAOY,EAAYhF,QAAS9B,EAAKgG,aACjGxF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMtI,KAAK,aACViI,EAAM,GAAGG,cAFV,KAE2BH,EAAMP,OAFjC,WAIJ9F,EAAAC,EAAAC,cAACgG,EAAA,EAAUF,QAAX,CAAmBvF,OAAQjB,EAAKP,MAAM2G,cAAgBU,GAClDtG,EAAAC,EAAAC,cAAA,UACKmG,EAAMD,IAAI,SAACO,EAAMC,GAAP,OACP5G,EAAAC,EAAAC,cAAA,MAAIqG,IAAKF,EAAM,GAAGG,cAAgBI,GAAYD,EAAKE,UAAnD,MAAiEF,EAAKG,uBAY9F9G,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAMxF,OAAK,GACXP,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,KACIhG,EAAAC,EAAAC,cAAC6F,EAAA,EAAKE,OAAN,KACQjG,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAiBC,KAAMC,MAD/B,eAIJlD,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,cAzDevE,+BCoJZsF,cAlJX,SAAAA,EAAYpJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgJ,IACfnJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkJ,GAAA7I,KAAAH,KAAMJ,KAoEVqJ,WAAa,kBAAMpJ,EAAKU,SAAS,CAAEmC,QAAQ,KArExB7C,EAsEnBqJ,WAAa,kBAAMrJ,EAAKU,SAAS,CAAEmC,QAAQ,KAnEvC7C,EAAKqB,MAAQ,CACTiI,UAAWtJ,EAAKD,MAAMwJ,YACtBtB,UAAWjI,EAAKD,MAAMkI,UACtBuB,WAAW,EACX3G,QAAQ,EACR4G,SAAU,GAEdzJ,EAAK0J,eAAiB1J,EAAK0J,eAAehI,KAApBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACtBA,EAAK2J,gBAAkB3J,EAAK2J,gBAAgBjI,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAXRA,kNAcfG,KAAKO,SAAS,CACV8I,WAAW,IAGXI,EAAetC,aAAauC,QAAQ,qBACrBhI,IACdC,IAAI,wBAAyB,CAC1BgI,QAAS,CAAEC,cAAa,OAAAhI,OAAS6H,MAEpC5H,KAAK,SAAAC,GACF,OAAOA,EAASE,KAAK6H,cALvBA,SAQFC,EAAYC,OAAOC,KAAKH,GACxBI,EAAQC,YAAY,WAChBJ,EAAUK,SACVC,cAAcH,GACdvI,IACKC,IAAI,SAAU,CACXgI,QAAS,CAAEC,cAAa,OAAAhI,OAAS6H,MAEpC5H,KAAK,SAAAC,GACFL,EAAKlB,SAAS,CACV4I,UAAWrH,EAASE,KAAKoH,YACzBC,WAAW,QAI5B,8QAICI,EAAetC,aAAauC,QAAQ,qBAClChI,IACDC,IAAI,mBAAoB,CACrBgI,QAAS,CAAEC,cAAa,OAAAhI,OAAS6H,MAEpC5H,KAAK,SAAAC,GACFuI,EAAK9J,SAAS,CACVuH,UAAWhG,EAASE,mLAKjBsI,gFACXb,EAAetC,aAAauC,QAAQ,qBAClChI,IAAMuE,KACR,4BACA,CACIsE,oBAAqBD,GAEzB,CAAEX,QAAS,CAAEC,cAAa,OAAAhI,OAAS6H,qIAOlC,IAAAe,EAAAxK,KACL,OAAIA,KAAKkB,MAAMiI,UAEHlH,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAMxF,OAAK,GACPP,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,KACIhG,EAAAC,EAAAC,cAAC6F,EAAA,EAAKE,OAAN,KACIjG,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAiBC,KAAMuF,MAD3B,aAIJxI,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,KACIhG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIP,UAAU,QACV2H,QAAS1K,KAAKkB,MAAMmI,UACpB9F,QAASvD,KAAKwJ,iBAHlB,qBAQJvH,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,KACIhG,EAAAC,EAAAC,cAACwI,EAAA,EAAD,KACK3K,KAAKkB,MAAM4G,UAAUC,OAAS,GAC3B/H,KAAKkB,MAAM4G,UAAUO,IACjB,SAACiC,EAAU3C,GACP,OACI1F,EAAAC,EAAAC,cAACwI,EAAA,EAAKlI,KAAN,CACI+F,IAAK8B,EAASjK,KAAOsH,GAErB1F,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIC,QAAS,kBACLiH,EAAKI,aACDN,EAASjK,QAHrB,QAOUiK,EAASjK,KAPnB,KAQKiK,EAASO,OACNP,EAASQ,gBAAiB,IATlC,UAYA7I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CACIC,QAAS,EACTC,YAAU,UAYlDhJ,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAMxF,OAAK,GACPP,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,KACIhG,EAAAC,EAAAC,cAAC6F,EAAA,EAAKE,OAAN,KACIjG,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAiBC,KAAMuF,MAD3B,aAIJxI,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,KACIhG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIP,UAAU,QACV2H,QAAS1K,KAAKkB,MAAMmI,UACpB9F,QAASvD,KAAKuJ,gBAHlB,4BArIE7F,aCuBXwH,mLAtBP,OACIjJ,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAMxF,OAAK,GACPP,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,KACIhG,EAAAC,EAAAC,cAAC6F,EAAA,EAAKE,OAAN,KACIjG,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAiBC,KAAMiG,MAD3B,yBAIJlJ,EAAAC,EAAAC,cAAC6F,EAAA,EAAKC,QAAN,CAAcpF,MAAO,CAAEuI,SAAU,eAC7BnJ,EAAAC,EAAAC,cAAA,oBADJ,KAC0BnC,KAAKJ,MAAMuB,KAAKkK,GACtCpJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BAHJ,KAGgCnC,KAAKJ,MAAMuB,KAAKqE,SAC5CvD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,uBALJ,KAK6BnC,KAAKJ,MAAMuB,KAAKsE,MACzCxD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0BAPJ,KAOgCnC,KAAKJ,MAAMuB,KAAKuE,SAC5CzD,EAAAC,EAAAC,cAAA,oBAjBMuB,aCcpB4H,cACF,SAAAA,EAAY1L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsL,IACfzL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwL,GAAAnL,KAAAH,KAAMJ,KACD2L,OAAS1L,EAAK0L,OAAOhK,KAAZzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAFCA,sEAKZe,GACHZ,KAAKO,SAAS,CAAEiL,MAAM,IACtBrE,aAAasE,WAAW,6CAEnB,IAAAC,EAUD1L,KAAKJ,MAAMsB,MARXmK,EAFCK,EAEDL,GACA7F,EAHCkG,EAGDlG,SACAC,EAJCiG,EAIDjG,MACAC,EALCgG,EAKDhG,SACA8F,EANCE,EAMDF,KACApC,EAPCsC,EAODtC,YACA9B,EARCoE,EAQDpE,MAGJ,OAXKoE,EASDrC,UAGOpH,EAAAC,EAAAC,cAAA,0BACCmF,GAASkE,EAEbvJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIC,OAAO,EACPK,MAAO,CACHkB,WAAY,OACZK,UAAW,OACXuH,SAAU,WAGd1J,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,UAAQ,EAAChB,MAAO,CAAE+I,cAAe,SACnC3J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAShJ,MAAO,CAAE+I,cAAe,WAC7B3J,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAiBC,KAAM4G,MAD3B,kBAIJ7J,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIP,UAAU,qBACVQ,QAASvD,KAAKuL,OACd5I,KAAK,KAHT,WAQJV,EAAAC,EAAAC,cAACmC,EAAA,EAAD,MACArC,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAQ,SACnB7B,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAY7H,MAAO,EAAGnB,UAAU,WAC5Bd,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAShJ,MAAO,CAAE+I,cAAe,SAC7B3J,EAAAC,EAAAC,cAAC6J,EAAD,CACI7K,KAAM,CACFkK,GAAIA,EACJ7F,SAAUA,EACVC,MAAOA,EACPC,SAAUA,MAKtBzD,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACI5J,EAAAC,EAAAC,cAAC8J,EAAD,CACInE,UAAW9H,KAAKJ,MAAMsB,MAAMI,oBAIxCW,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAY7H,MAAO,EAAGnB,UAAU,WAC5Bd,EAAAC,EAAAC,cAAC+J,EAAD,CACI9C,YAAaA,EACbtB,UAAW9H,KAAKJ,MAAMsB,MAAMiL,mBAMxCX,OAAL,EACIvJ,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAUR,GAAG,aA7ENrD,aAoJX0I,cAjEX,SAAAA,EAAYxM,GAAO,IAAA6B,EAAA,OAAA3B,OAAAC,EAAA,EAAAD,CAAAE,KAAAoM,IACf3K,EAAA3B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsM,GAAAjM,KAAAH,KAAMJ,KA2CVyM,aAAe,SAAA/K,GACXG,EAAKlB,SAAS,CACVe,qBA5CJG,EAAKP,MAAQ,CACTmK,GAAI,GACJ7F,SAAU,GACVC,MAAO,GACPC,SAAU,GACVyG,cAAe,GACf7K,gBAAiB,GACjBkK,MAAM,EACNpC,aAAa,EACbC,WAAW,EACX/B,OAAO,GAEX7F,EAAK4K,aAAe5K,EAAK4K,aAAa9K,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAA2B,IAdLA,+MAmBM,QADjBgI,EAAetC,aAAauC,QAAQ,cAEpC1J,KAAKO,SAAS,CACV8I,WAAW,EACX/B,OAAO,aAGT5F,IACDC,IAAI,SAAU,CACXgI,QAAS,CAAEC,cAAa,OAAAhI,OAAS6H,MAEpC5H,KAAK,SAAAC,GACFuI,EAAK9J,SAAS,CACV8K,GAAIvJ,EAASE,KAAKqJ,GAClB7F,SAAU1D,EAASE,KAAKwD,SACxBC,MAAO3D,EAASE,KAAKyD,MACrBC,SAAU5D,EAASE,KAAK0D,SACxByG,cAAerK,EAASE,KAAKmK,cAC7BX,KAAM1J,EAASE,KAAKwJ,KACpBpC,YAAatH,EAASE,KAAKoH,YAC3BC,WAAW,EACX/B,OAAO,yIAYnB,OACIrF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0C,EAAD,CACIzD,SAAUpB,KAAKJ,MAAMwB,SACrBD,KAAMnB,KAAKkB,MAAMsE,SACjBzD,iBAAkB/B,KAAKqM,eAG3BpK,EAAAC,EAAAC,cAACmK,EAAD,CAAapL,MAAOlB,KAAKkB,gBA5DnBwC,0DCjFhB6I,kBAAiBC,YAAeC,MAEtC,SAASC,GAAM9M,GACX,OAAIA,EAAM+M,cAAc5E,OAAS,EAEzB9F,EAAAC,EAAAC,cAAA,WACKvC,EAAM+M,cAActE,IAAI,SAACuE,EAAOjF,GAC7B,OACI1F,EAAAC,EAAAC,cAAA,OACIY,UAAU,iBACVF,MAAO,CACHuB,UAAW,SACXpB,UAAW,MACX6J,YAAa,MACb3J,aAAc,MACd4J,WAAY,SACZC,cAAe,QAGnB9K,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACI0J,GAAG,IACHjK,UAAU,4BACVF,MAAO,CACHoK,SAAU,SACVC,WAAY,MACZC,YAAa,OAEjB5J,QAAS,kBAAM3D,EAAMwN,gBAAgBzF,KAErC1F,EAAAC,EAAAC,cAAA,KAAGY,UAAU,uBAEjBd,EAAAC,EAAAC,cAAA,OACIY,UAAU,kCACVsK,IAAKT,EAAMU,YAEfrL,EAAAC,EAAAC,cAAA,KAAGU,MAAO,CAAEmC,MAAO,UACd4H,EAAMW,MAAMC,UACT,EACAZ,EAAMW,MAAMxF,OAAS,GACf,GACA6E,EAAMW,MAAMxF,aAS3C9F,EAAAC,EAAAC,cAAA,YAGX,SAASsL,GAAc7N,EAAO6H,GAC1B,IAAIiG,EAAQ,GAoCZ,OAnCA9N,EAAMyI,IAAI,SAACiC,EAAU3C,GACjB+F,EAAM/F,GAAS,GACf+F,EAAM/F,GAAOgG,SAAWrD,EAAS,GAAG7B,cACpCiF,EAAM/F,GAAOiG,OAAS,kBAClB3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAIC,KAAL,CACIzL,UAAQ,EACRQ,MAAO,CACHwB,OAAQ,QACR0J,UAAW,WAGf9L,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACI4L,UAAQ,EACR3L,UAAQ,EACRC,KAAK,OACLO,MAAO,CACHqB,MAAO,SAGVoG,EAASjC,IAAI,SAACO,EAAMC,GAAP,OACV5G,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,CACI+F,IAAK8B,EAAS,GAAG7B,cAAgBI,EACjCtF,QAAS,WACLkE,EAAW,GAAA7F,OACJgH,EAAKE,UADD,OAAAlH,OACgBgH,EAAKG,gBAInCH,EAAKE,UARV,MAQwBF,EAAKG,oBAO1C2E,MAGLO,eACF,SAAAA,EAAYrO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiO,IACfpO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmO,GAAA9N,KAAAH,KAAMJ,KAuKVsO,kBAAoB,SAAAC,GAEhBtO,EAAKU,SAAS,CACV6N,aAAcD,KA3KHtO,EA+KnBO,aAAe,SAAA+N,GAEPA,EAAMpG,OAAS,GACflI,EAAKU,SAAS,CACV6N,aAAcD,EAAM,GAAGrF,UAAY,MAAQqF,EAAM,GAAGpF,eAnL7ClJ,EAuLnBwO,gBAAkB,SAAA/N,GACQ,KAAlBA,EAAMgO,SACNzO,EAAK0O,WAAWjO,IAvLpBT,EAAKqB,MAAQ,CACTkN,aAAc,GACdI,QAAS,GACThJ,SAAU,GACViJ,cAAe,GACf9B,cAAe,GACftD,WAAW,EACXqF,OAAQ,KACRC,QAAS,GACTC,YAAQC,EACR3K,MAAO,EACPG,OAAQ,EACRyK,MAAM,GAEVjP,EAAKkP,cAAgBlP,EAAKkP,cAAcxN,KAAnBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACrBA,EAAKmP,QAAUnP,EAAKmP,QAAQzN,KAAbzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACfA,EAAK0O,WAAa1O,EAAK0O,WAAWhN,KAAhBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAClBA,EAAKoP,SAAWpP,EAAKoP,SAAS1N,KAAdzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAChBA,EAAKO,aAAeP,EAAKO,aAAamB,KAAlBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACpBA,EAAKqO,kBAAoBrO,EAAKqO,kBAAkB3M,KAAvBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACzBA,EAAKuN,gBAAkBvN,EAAKuN,gBAAgB7L,KAArBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IACvBA,EAAKqP,WAAarP,EAAKqP,WAAW3N,KAAhBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAClBA,EAAKsP,SAAWtP,EAAKsP,SAAS5N,KAAdzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAChBA,EAAKuP,oBAAsBvP,EAAKuP,oBAAoB7N,KAAzBzB,OAAA0B,EAAA,EAAA1B,CAAAD,IAzBZA,iNA6Bf2E,SAASC,KAAK5B,MAAM6B,WAAa,UAC7B+E,EAAetC,aAAauC,QAAQ,qBAClChI,IACDC,IAAI,SAAU,CACXgI,QAAS,CAAEC,cAAa,OAAAhI,OAAS6H,MAEpC5H,KAAK,SAAAC,GACe,OAAbA,GACAL,EAAKlB,SAAS,CACViF,SAAU1D,EAASE,KAAKwD,4BAGZqJ,IAAxB7O,KAAKkB,MAAMsE,yCACL9D,IACDC,IADC,2BAAAC,OAC8B5B,KAAKkB,MAAMsE,WAC1C3D,KAAK,SAAAC,GACe,OAAbA,GACAL,EAAKlB,SAAS,CACVkO,cAAe3M,EAASE,SAGnCH,KAAK,kBAAMJ,EAAK4N,qBACnBT,EAASU,MACftP,KAAKO,SAAS,CACVqO,OAAQA,IAEZA,EAAOW,KAAK,WAAY,SAAAvN,GACpBP,EAAKlB,SAAS,CACViO,QAASxM,EAAKwM,QACdM,KAAM9M,EAAK8M,KACXzF,WAAW,MAGnBuF,EAAOY,GAAG,YAAa,SAAAxN,GACnBP,EAAKlB,SAAS,CACVoM,cAAe3K,EAAKyN,MACpBjB,QACqB,OAAjBxM,EAAKwM,QAAmB/M,EAAKP,MAAMsN,QAAUxM,EAAKwM,QACtDJ,aAAc,OAGtBQ,EAAOY,GAAG,gBAAiB,WACvB/N,EAAKP,MAAMwN,OAAOgB,OAAO,GAAG,KAEhCd,EAAOY,GAAG,oBAAqB,SAAAxN,GAC3B,IAAI2N,EAAclO,EAAKP,MAAMwN,OAAOkB,iBAChCC,KAAKC,IAAIH,EAAc3N,EAAK2N,aAAe,KAC3ClO,EAAKP,MAAMwN,OAAOgB,OAAO1N,EAAK2N,aAC9BlO,EAAKP,MAAMwN,OAAOqB,eAG1BnB,EAAOY,GAAG,2BAA4B,SAAAxN,GAClC,IAAIgO,EAAevO,EAAKP,MAAMwN,OAAOuB,iBACZ,IAArBjO,EAAKkO,aACiB,IAAlBF,GAAwC,IAAjBA,GACvBvO,EAAKP,MAAMwN,OAAOqB,YAEnBtO,EAAKP,MAAMwN,OAAOyB,eAE7BvB,EAAOY,GAAG,YAAa,SAAAxN,GACnBP,EAAKP,MAAM0N,OAAOW,KAAK,aAAc,CACjCI,YAAalO,EAAKP,MAAMwN,OAAOkB,iBAC/BQ,sBAC8BvB,IAA1B7M,EAAKoO,iBACCpO,EAAKoO,sBACLvB,MAGlBD,EAAOY,GAAG,UAAW,WACjBZ,EAAOW,KAAK,mJAGTc,GACPrQ,KAAKkB,MAAMwN,OAAOgB,OAAOW,mCAErBzP,GACJZ,KAAKO,SAAS,CACVmO,OAAQ9N,EAAEH,SAEdT,KAAKkB,MAAMwN,OAAO4B,UAAU,0CAGlB5B,GACV,OAAQA,EAAO1M,MACX,KAAK,EACuC,IAApChC,KAAKkB,MAAMyL,cAAc5E,OACzB/H,KAAKkB,MAAM0N,OAAOW,KAAK,iBAEvBvP,KAAKkB,MAAM0N,OAAOW,KAAK,cAE3B,MACJ,KAAK,EAKL,KAAK,EACDvP,KAAKkB,MAAM0N,OAAOW,KAAK,oBAAqB,CACxCW,YAAaxB,EAAO1M,OAExB,MACJ,KAAK,EACDhC,KAAKkB,MAAM0N,OAAOW,KAAK,aAAc,CACjCI,YAAa3P,KAAKkB,MAAMwN,OAAOkB,wDAOhB,IAArBzM,EAAqBoN,UAAAxI,OAAA,QAAA8G,IAAA0B,UAAA,GAAAA,UAAA,GAAd,aACb,SAASC,EAActO,EAAGuO,GACtB,OAAIvO,EAAE6G,YAAc0H,EAAE1H,YAAoB,GAClC,EAEZ,SAAS2H,EAAYxO,EAAGuO,GAGpB,OAFYvO,EAAE4G,UAAU6H,cACZF,EAAE3H,UAAU6H,cACE,GAClB,EAEZ,GAAI3Q,KAAKkB,MAAMuN,cAAc1G,OAAS,EAClC,OAAQ5E,GACJ,IAAK,aACDnD,KAAKO,SAAS,SAAAyP,GAOV,OANAA,EAAavB,cAAcmC,QACvB,SAACtG,EAAU3C,GACP2C,EAASuG,KAAKH,GACdpG,EAASuG,KAAKL,KAGf,CACH/B,cAAeuB,EAAavB,8DA2BhCL,GACHpO,KAAKkB,MAAM0N,OACjBW,KAAK,cAAe,CAAEuB,OAAQ1C,uCAE9BxN,GACPA,EAAE6C,iBACFzD,KAAK+Q,UAAUC,cAAcC,QAChBjR,KAAKkB,MAAM0N,OACjBW,KAAK,cAAe,CAAEuB,OAAQ9Q,KAAKkB,MAAMkN,kDAIhDpO,KAAK+O,cAAc,CAAE/M,KAAM,yCAIdhC,KAAKkB,MAAM0N,OACjBW,KAAK,kDAIZvP,KAAKkB,MAAM0N,OAAOW,KAAK,qDAEX5H,GACZ3H,KAAKkB,MAAM0N,OAAOW,KAAK,eAAgB,CAAE2B,OAAQ,SAAUvJ,UAC3D3H,KAAKO,SAAS,SAAAyP,GAEV,OADAA,EAAarD,cAAcwE,OAAOxJ,EAAO,GAClC,CACHgF,cAAeqD,EAAarD,kDAK/B,IAAAtC,EAAArK,KAOL,OACIiC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWC,OAAO,GACdP,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAQ,QAAQsN,WAAS,GACpCnP,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACIhI,UAAQ,EACRC,QAAS,EACTjB,MAAO,CAAEkB,WAAY,MAAO6H,cAAe,QAG3C3J,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAY7H,MAAO,GACfjC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,eACXd,EAAAC,EAAAC,cAACoK,GAAD,CACI8E,IAAK,SAAAN,GAAS,OACT1G,EAAK0G,UAAYA,GAEtB3N,YAAY,oBACZkO,MAAM,OACNC,WAAW,EACXC,cAAexR,KAAKkO,kBACpB7K,SAAUrD,KAAKI,aACfqR,aAAa,MACbpG,GAAG,iBACHqG,UAAU,EACVrI,UAAWrJ,KAAKkB,MAAMmI,UACtBsI,SAAU,SAAAC,GACNvH,EAAK9J,SAAS,CAAE8I,WAAW,IAC3B3H,IACKC,IADL,kBAAAC,OAC2BgQ,IACtB/P,KAAK,SAAAC,GAAQ,OACVuI,EAAK9J,SAAS,CACV8I,WAAW,EACXsF,QAAS7M,EAASE,UAIlC6P,SAAU,SAAAC,GACN,SAAAlQ,OAAUkQ,EAAOhJ,UAAjB,OAAAlH,OACIkQ,EAAO/I,cAGf4F,QAAS3O,KAAKkB,MAAMyN,UAExB1M,EAAAC,EAAAC,cAAA,QAAMY,UAAU,mBACZd,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIP,UAAU,sCACVI,KAAK,SACLI,QAASvD,KAAKuO,WACd/K,YAAa,SAAA5C,GAAC,OAAIA,EAAE6C,mBAJxB,oBAahBxB,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACI/H,QAAS,EACTjB,MAAO,CACHkB,WAAY,MACZ6H,cAAe,MACfvH,OAAQ,UAGX,IAEDpC,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACI7H,MAAO,EACPrB,MAAO,CACHK,aAAc,MACd2J,YAAa,MACbxI,OAAQ,OACR0J,UAAW,YAGnB9L,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACI7H,MAAO,GACPrB,MAAO,CACHwB,OAAQ,OACRwI,YAAa,MACb3J,aAAc,QAGlBjB,EAAAC,EAAAC,cAAC4P,EAAA,EAAD,CACIC,mBAAmB,uCACnB3G,GAAG,SACHmD,QAASxO,KAAKkB,MAAMsN,QACpByD,KA7FX,CACTC,WAAY,CACRC,SAAU,IA4FMnD,QAAShP,KAAKgP,QACdD,cAAe/O,KAAK+O,gBAExB9M,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAShJ,MAAO,CAAEwB,OAAQ,SACtBpC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIP,UAAU,uBACVqP,QAAQ,OACR7O,QAASvD,KAAKmP,SACd3L,YAAa,SAAA5C,GAAC,OAAIA,EAAE6C,mBAJxB,aAQAxB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIP,UAAU,uBACVqP,QAAQ,QACR7O,QAAS,WACL8G,EAAK4E,SAAS,CAAEjN,KAAM,KAE1BwB,YAAa,SAAA5C,GAAC,OAAIA,EAAE6C,mBANxB,aAUAxB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIP,UAAU,uBACVqP,QAAQ,QACR7O,QAASvD,KAAKkP,WACd1L,YAAa,SAAA5C,GAAC,OAAIA,EAAE6C,mBAJxB,gBASJxB,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACIhJ,MAAO,CACHiK,WAAY,WAGhB7K,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CACInF,MAAO,CACHwP,gBAAiB,UACjBC,YAAa,UACbC,WAEI,IADAvS,KAAKkB,MAAMyL,cAAc5E,OAEnB,SACA,UACVyK,QAAS,OACTC,SAAU,OACVC,UAAW,WAGfzQ,EAAAC,EAAAC,cAACuK,GAAD,CACIC,cAAe3M,KAAKkB,MAAMyL,cAC1BS,gBAAiBpN,KAAKoN,qBAKtCnL,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACI7H,MAAO,EACPrB,MAAO,CACHK,aAAc,MACd2J,YAAa,MACbxI,OAAQ,SAGZpC,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACI8E,KAAM,CACFtQ,UAAU,EACVuQ,UAAU,EACVC,SAAS,GAEbhQ,MAAO,CAAEwB,OAAQ,OAAQnB,aAAc,QACvCwK,MAAO,CACH,CACIC,SAAU,OACVC,OAAQ,kBACJ3L,EAAAC,EAAAC,cAAC0L,EAAA,EAAIC,KAAL,CACIzL,UAAQ,EACRQ,MAAO,CAAEwB,OAAQ,UAFrB,iBAQR,CACIsJ,SAAU,YACVC,OAAQ,WACJ,OACIvD,EAAKnJ,MAAMuN,cACN1G,OAAS,EAGV9F,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACIvL,KAAK,QACLqQ,KAAM,CACFtQ,UAAU,EACVuQ,UAAU,EACVE,WAAW,GAEfjQ,MAAO,CACHwB,OAAQ,QAEZqJ,MAAOD,GACHpD,EAAKnJ,MACAuN,cACLpE,EACK+E,uBAKjBnN,EAAAC,EAAAC,cAAC0L,EAAA,EAAIC,KAAL,CACIzL,UAAQ,EACRQ,MAAO,CAAEwB,OAAQ,UAFrB,kFAe5BpC,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACIhI,UAAQ,EACRC,QAAS,EACTjB,MAAO,CAAEkB,WAAY,SAEpB,IAED9B,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACI7H,MAAO,GACPrB,MAAO,CAAEK,aAAc,MAAO2J,YAAa,QAE3C5K,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACIE,QAAS,EACTf,UAAU,OACVF,MAAO,CAAEkB,WAAY,QAErB9B,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACI7H,MAAO,GACPrB,MAAO,CACHK,aAAc,MACda,WAAY,SAGpB9B,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACI7H,MAAO,EACPrB,MAAO,CACHgK,YAAa,MACb9I,WAAY,qBAtd9BL,aAmfPqP,oLAfP,OACI9Q,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwC,EAAA,OAAD,KACI1C,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,QACI9B,KAAK,cACLuE,QAAQ,8DAGhB3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAQzD,SAAUpB,KAAKJ,MAAMwB,WAC7Ba,EAAAC,EAAAC,cAAC6Q,GAAD,cAZGtP,aChkBJuP,+LAZPlJ,OAAOmJ,OAAOC,QACdpJ,OAAOqJ,yCAGP,OACInR,EAAAC,EAAAC,cAAA,mBARYuB,aCuBT2P,oLAfP,OACIpR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACItF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAO+L,OAAK,EAACC,KAAK,IAAIC,UAAWjP,IADrC,IAEItC,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAO+L,OAAK,EAACC,KAAK,UAAUC,UAAWjO,IACvCtD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAO+L,OAAK,EAACC,KAAK,SAASC,UAAWxM,IACtC/E,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAO+L,OAAK,EAACC,KAAK,WAAWC,UAAWpH,IACxCnK,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAO+L,OAAK,EAACC,KAAK,WAAWC,UAAWvF,KACxChM,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAO+L,OAAK,EAACC,KAAK,kBAAkBC,UAAWP,cAV9CvP,aCKN+P,oLARP,OACIxR,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACXd,EAAAC,EAAAC,cAACuR,GAAD,cAJEhQ,aCElBiQ,IAAS/F,OACL3L,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,KACI5E,EAAAC,EAAAC,cAACyR,GAAD,OAEJpP,SAASqP,eAAe","file":"static/js/main.f21cc4bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Menu, Container, Button } from 'semantic-ui-react';\r\nimport '../containers/Youtube.css';\r\nimport { faAutoprefixer } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: this.props.user,\r\n            fixed: false,\r\n            activeMenu: this.props.location.pathname,\r\n        };\r\n\r\n        this.searchPlaylists = this.searchPlaylists.bind(this);\r\n        this.handleMenuClick = this.handleMenuClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    searchPlaylists() {\r\n        axios\r\n            .get(`api/user/playlists?user=${this.state.user}`)\r\n            .then(response => {\r\n                this.props.sendDataToParent(response.data);\r\n            });\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleMenuClick = (e, { name }) => {\r\n        this.setState({\r\n            activeMenu: name,\r\n        });\r\n    };\r\n\r\n    hideFixedMenu = () => this.setState({ fixed: false });\r\n    showFixedMenu = () => this.setState({ fixed: true });\r\n    render() {\r\n        const { pathname } = this.props.location;\r\n        const { activeMenu } = this.state;\r\n        switch (pathname) {\r\n            case '/':\r\n                return (\r\n                    <Menu inverted={true} size=\"large\">\r\n                        <Container fluid={true}>\r\n                            <Menu.Item\r\n                                name=\"home\"\r\n                                active={activeMenu === '/home'}\r\n                                href=\"/\"\r\n                            />\r\n                            <Menu.Item\r\n                                name=\"youtube\"\r\n                                active={activeMenu === '/youtube'}\r\n                                href=\"/youtube\"\r\n                            />\r\n\r\n                            <Menu.Menu position=\"right\">\r\n                                <Menu.Item\r\n                                    name=\"login\"\r\n                                    active={activeMenu === '/login'}\r\n                                    href=\"/login\"\r\n                                />\r\n                                <Menu.Item\r\n                                    name=\"signup\"\r\n                                    active={activeMenu === '/signup'}\r\n                                    href=\"/signup\"\r\n                                />\r\n                            </Menu.Menu>\r\n                        </Container>\r\n                    </Menu>\r\n                );\r\n            case '/login':\r\n                return (\r\n                    <Menu inverted={true} size=\"large\">\r\n                        <Container fluid={true}>\r\n                            <Menu.Item\r\n                                name=\"home\"\r\n                                active={activeMenu === '/home'}\r\n                                href=\"/\"\r\n                            />\r\n                            <Menu.Menu position=\"right\">\r\n                                <Menu.Item\r\n                                    name=\"login\"\r\n                                    active={activeMenu === '/login'}\r\n                                    href=\"/login\"\r\n                                />\r\n                                <Menu.Item\r\n                                    name=\"signup\"\r\n                                    active={activeMenu === '/signup'}\r\n                                    href=\"/signup\"\r\n                                />\r\n                            </Menu.Menu>\r\n                        </Container>\r\n                    </Menu>\r\n                );\r\n            case '/signup':\r\n                return (\r\n                    <Menu inverted={true} size=\"large\">\r\n                        <Container fluid={true}>\r\n                            <Menu.Item\r\n                                name=\"home\"\r\n                                active={activeMenu === '/home'}\r\n                                href=\"/\"\r\n                            />\r\n                            <Menu.Menu position=\"right\">\r\n                                <Menu.Item\r\n                                    name=\"login\"\r\n                                    active={activeMenu === '/login'}\r\n                                    href=\"/login\"\r\n                                />\r\n                                <Menu.Item\r\n                                    name=\"signup\"\r\n                                    active={activeMenu === '/signup'}\r\n                                    href=\"/signup\"\r\n                                />\r\n                            </Menu.Menu>\r\n                        </Container>\r\n                    </Menu>\r\n                );\r\n            case '/profile':\r\n                return (\r\n                    <Menu\r\n                        inverted={true}\r\n                        size=\"large\"\r\n                        style={{ borderRadius: '0px' }}\r\n                    >\r\n                        <Container fluid={true}>\r\n                            <Menu.Item\r\n                                name=\"home\"\r\n                                active={activeMenu === '/home'}\r\n                                href=\"/\"\r\n                            />\r\n                            <Menu.Item\r\n                                name=\"youtube\"\r\n                                active={activeMenu === '/youtube'}\r\n                                href=\"/youtube\"\r\n                            />\r\n\r\n                            <Menu.Menu position=\"right\">\r\n                                <div\r\n                                    className=\"ui action input\"\r\n                                    style={{\r\n                                        marginTop: 'auto',\r\n                                        marginBottom: 'auto',\r\n                                        paddingRight: '10px',\r\n                                    }}\r\n                                >\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search a user\"\r\n                                        onChange={this.handleChange('user')}\r\n                                    />\r\n                                    <Button\r\n                                        className=\"inverted green right attached\"\r\n                                        type=\"button\"\r\n                                        onClick={this.searchPlaylists}\r\n                                        onMouseDown={e => e.preventDefault()}\r\n                                    >\r\n                                        Search\r\n                                    </Button>\r\n                                </div>\r\n                            </Menu.Menu>\r\n                        </Container>\r\n                    </Menu>\r\n                );\r\n            case '/youtube':\r\n                return (\r\n                    <Menu inverted={true} size=\"large\">\r\n                        <Container fluid={true}>\r\n                            <Menu.Item\r\n                                name=\"home\"\r\n                                active={activeMenu === '/home'}\r\n                                href=\"/\"\r\n                            />\r\n                            <Menu.Item\r\n                                name=\"youtube\"\r\n                                active={activeMenu === '/youtube'}\r\n                                href=\"/youtube\"\r\n                            />\r\n                        </Container>\r\n                    </Menu>\r\n                );\r\n        }\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Segment, Divider } from 'semantic-ui-react';\r\n\r\nconst SITE_NAME = 'Paghunie';\r\nclass Features extends Component {\r\n    render() {\r\n        return (\r\n            <Grid centered columns=\"equal\" style={{ paddingTop: '30px' }}>\r\n                <Grid.Row>\r\n                    <Grid.Column width={5}>\r\n                        <Segment style={{ textAlign: 'left', height: '100%' }}>\r\n                            <h4>\r\n                                Enjoy music in sync with your friends or\r\n                                strangers.\r\n                            </h4>\r\n                            <Divider />\r\n                            <b>{SITE_NAME} features</b>\r\n                            <ul>\r\n                                <li>Synced video player</li>\r\n                                <li>Spotify playlist syncing</li>\r\n                                <li>Queue system for songs</li>\r\n                                <li>Realtime search</li>\r\n                            </ul>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={5}>\r\n                        <Segment style={{ textAlign: 'left', height: '100%' }}>\r\n                            <h4>How to use Paghunie</h4>\r\n                            <Divider />\r\n                            <ol>\r\n                                <li>\r\n                                    Join a <a href=\"/youtube\">room</a>\r\n                                </li>\r\n                                <li>\r\n                                    Search for your favorite music and add them\r\n                                    to the queue\r\n                                </li>\r\n                                <Divider />\r\n                                <li>\r\n                                    Optionally create an account to sync your\r\n                                    spotify playlists\r\n                                </li>\r\n                                <li>\r\n                                    Select a song from the playlists tab to add\r\n                                    them to the queue\r\n                                </li>\r\n                            </ol>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Features;\r\n","import React, { Component } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Container, Grid } from 'semantic-ui-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport Features from '../components/HomeFeatures';\r\nclass Home extends Component {\r\n    componentDidMount() {\r\n        document.body.style.background = '#202124';\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Helmet>\r\n                    <title>Paghunie Music Site</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"Welcome to Paghunie music site where you can listen to music in realtime with friends.\"\r\n                    />\r\n                </Helmet>\r\n                <Navbar location={this.props.location} />\r\n                <Container\r\n                    fluid={true}\r\n                    textAlign=\"center\"\r\n                    style={{ minHeight: 700, paddingTop: '0px' }}\r\n                >\r\n                    <Container text style={{ paddingTop: '80px' }}>\r\n                        <h1 style={{ color: 'white' }}>\r\n                            <FontAwesomeIcon icon={faMusic} /> Paghunie Music\r\n                            Site\r\n                        </h1>\r\n                        <h3 style={{ color: 'white' }}>\r\n                            Listen to music with friends\r\n                        </h3>\r\n                        <h5 style={{ color: 'white' }}>\r\n                            Site features realtime search and queue system for\r\n                            videos\r\n                        </h5>\r\n                    </Container>\r\n                    <Features />\r\n                    <footer\r\n                        style={{\r\n                            position: 'absolute',\r\n                            bottom: '0',\r\n                            width: '100%',\r\n                            height: '5rem',\r\n                            color: 'white',\r\n                        }}\r\n                    >\r\n                        <Grid\r\n                            centered\r\n                            divided\r\n                            inverted\r\n                            columns=\"equal\"\r\n                            style={{ height: '100%' }}\r\n                        >\r\n                            <Grid.Column width={4}>\r\n                                <h5>\r\n                                    Paghunie is a music site where you can enjoy\r\n                                    music with friends or strangers. The site\r\n                                    includes a realtime search and queue system\r\n                                    for videos.\r\n                                </h5>\r\n                            </Grid.Column>\r\n\r\n                            <Grid.Column width={4}>\r\n                                <h5>\r\n                                    Created with MySQL, Express, React, and\r\n                                    Nodejs\r\n                                </h5>\r\n                            </Grid.Column>\r\n                        </Grid>\r\n                    </footer>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Button, Form } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Navbar from '../components/Navbar'\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            messageFromServer: '',\r\n            showError: false,\r\n            registerError: false,\r\n            emailError: false,\r\n            usernameError: false,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.registerUser = this.registerUser.bind(this)\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    registerUser(e) {\r\n        e.preventDefault()\r\n        axios\r\n            .post('signup', {\r\n                username: this.state.username,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            })\r\n            .then(response => {\r\n                console.log('response', response)\r\n                if (response.data === 'email is already taken') {\r\n                    this.setState({\r\n                        showError: true,\r\n                        emailError: true,\r\n                        usernameError: false,\r\n                        registerError: false,\r\n                    })\r\n                } else if (response.data === 'username is already taken') {\r\n                    this.setState({\r\n                        showError: true,\r\n                        emailError: false,\r\n                        usernameError: true,\r\n                        registerError: false,\r\n                    })\r\n                } else if (\r\n                    response.data === 'email and password required' ||\r\n                    response.data === 'Missing credentials'\r\n                ) {\r\n                    this.setState({\r\n                        showError: true,\r\n                        emailError: false,\r\n                        usernameError: false,\r\n                        registerError: true,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        messageFromServer: response.data.message,\r\n                        showError: false,\r\n                        emailError: false,\r\n                        usernameError: false,\r\n                        registerError: false,\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err.data))\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            messageFromServer,\r\n            showError,\r\n            registerError,\r\n            emailError,\r\n            usernameError,\r\n        } = this.state\r\n\r\n        if (messageFromServer === '') {\r\n            return (\r\n                <div>\r\n                    <Navbar location={this.props.location}/>\r\n                    <Container\r\n                    className=\"justify-content-center\"\r\n                    style={{ paddingTop: '30px', textAlign: 'left' }}\r\n                    >\r\n                        <h1>\r\n                            <FontAwesomeIcon icon={faSignInAlt} /> Signup\r\n                        </h1>\r\n                        <Form onSubmit={this.registerUser}>\r\n                            <Form.Field>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    onChange={this.handleChange('email')}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter username\"\r\n                                    onChange={this.handleChange('username')}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={this.handleChange('password')}\r\n                                />\r\n                            </Form.Field>\r\n                            <Button color='yellow' type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                        {showError === true && registerError === true && (\r\n                            <div>\r\n                                <p>\r\n                                    Email, username, and password are required\r\n                                    fields.\r\n                                </p>\r\n                            </div>\r\n                        )}\r\n                        {showError === true && emailError === true && (\r\n                            <div>\r\n                                <p>\r\n                                    That email is already taken. Please choose\r\n                                    another for login.\r\n                                </p>\r\n                            </div>\r\n                        )}\r\n                        {showError === true && usernameError === true && (\r\n                            <div>\r\n                                <p>\r\n                                    That username is already taken. Please\r\n                                    choose another for login.\r\n                                </p>\r\n                            </div>\r\n                        )}\r\n                </Container>\r\n                </div>\r\n                \r\n            )\r\n        } else if (messageFromServer === 'user created') {\r\n            return (\r\n                <div>\r\n                    <h3>User successfully registered!</h3>\r\n                    <Button style={{ margin: '1em' }}>\r\n                        <Link\r\n                            style={{ textDecoration: 'none', color: 'white' }}\r\n                            to=\"/login\"\r\n                        >\r\n                            Login\r\n                        </Link>\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Signup\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Container, Button, Form } from 'semantic-ui-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\n\r\nimport Navbar from '../components/Navbar';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            showError: false,\r\n            loggedIn: false,\r\n        };\r\n\r\n        this.loginUser = this.loginUser.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    loginUser(e) {\r\n        e.preventDefault();\r\n\r\n        axios\r\n            .post('login', {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n            })\r\n            .then(response => {\r\n                if (\r\n                    response.data === 'bad username' ||\r\n                    response.data === 'passwords do not match'\r\n                ) {\r\n                    this.setState({ showError: true });\r\n                } else {\r\n                    localStorage.setItem('jwtToken', response.data.token);\r\n                    this.setState({\r\n                        loggedIn: true,\r\n                        showError: false,\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.data);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { showError, loggedIn } = this.state;\r\n\r\n        if (!loggedIn) {\r\n            return (\r\n                <div>\r\n                    <Navbar location={this.props.location} />\r\n                    <Container\r\n                        style={{ paddingTop: '30px', textAlign: 'left' }}\r\n                    >\r\n                        <h1>\r\n                            <FontAwesomeIcon icon={faSignInAlt} /> Login\r\n                        </h1>\r\n                        <Form onSubmit={this.loginUser}>\r\n                            <Form.Field>\r\n                                <label style={{ color: 'white' }}>\r\n                                    Username\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter username\"\r\n                                    onChange={this.handleChange('username')}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label style={{ color: 'white' }}>\r\n                                    Password\r\n                                </label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={this.handleChange('password')}\r\n                                />\r\n                            </Form.Field>\r\n                            <Button color=\"yellow\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                        {showError && <p>Incorrect email or password.</p>}\r\n                    </Container>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Redirect to=\"/profile\" />;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, {Component} from 'react'\r\nimport { Card, Accordion, Icon } from 'semantic-ui-react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass PlaylistInfo extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            activeIndex: '',\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick = (e, titleProps) => {\r\n        const { index } = titleProps\r\n        const {activeIndex } = this.state\r\n        const newIndex = activeIndex === index ? -1 : index\r\n\r\n        this.setState({ activeIndex: newIndex })\r\n    }\r\n\r\n    render() {\r\n        const { playlists } = this.props\r\n        \r\n        if(playlists.length > 0) {\r\n            return (\r\n                <Card fluid>\r\n                <Card.Content>\r\n                    <Card.Header>\r\n                        <FontAwesomeIcon icon={faMusic} /> Playlists\r\n                    </Card.Header>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    <Accordion fluid styled>\r\n                        {playlists.map((songs, songsIndex) => (\r\n                            <div key={songs[0].playlist_name + 'List'}>\r\n                            <Accordion.Title active={this.state.activeIndex === songsIndex} index={songsIndex} onClick={this.handleClick}>\r\n                            <Icon name='dropdown' />\r\n                            {songs[0].playlist_name} ({songs.length} songs)\r\n                        </Accordion.Title>\r\n                        <Accordion.Content active={this.state.activeIndex === songsIndex}>\r\n                            <ul>\r\n                                {songs.map((song, songIndex) => (\r\n                                    <li key={songs[0].playlist_name + songIndex}>{song.song_name} - {song.artist_name}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </Accordion.Content>\r\n                        </div>\r\n                        ))}\r\n                    </Accordion>\r\n                </Card.Content>\r\n                </Card>\r\n            )\r\n        }\r\n        return (\r\n            <Card fluid>\r\n            <Card.Content>\r\n                <Card.Header>\r\n                        <FontAwesomeIcon icon={faMusic} /> Playlists\r\n                </Card.Header>\r\n            </Card.Content>\r\n            <Card.Content />\r\n            </Card>\r\n    )\r\n    }\r\n}\r\n\r\nexport default PlaylistInfo","import React, { Component } from 'react';\r\nimport { Card, List, Button, Dimmer, Progress } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass SpotifyInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            connected: this.props.spotifyAuth,\r\n            playlists: this.props.playlists,\r\n            isLoading: false,\r\n            active: false,\r\n            progress: 0,\r\n        };\r\n        this.connectSpotify = this.connectSpotify.bind(this);\r\n        this.updatePlaylists = this.updatePlaylists.bind(this);\r\n    }\r\n    async connectSpotify() {\r\n        this.setState({\r\n            isLoading: true,\r\n        });\r\n\r\n        let accessString = localStorage.getItem('jwtToken');\r\n        const link = await axios\r\n            .get('api/spotify/authorize', {\r\n                headers: { Authorization: `JWT ${accessString}` },\r\n            })\r\n            .then(response => {\r\n                return response.data.link;\r\n            });\r\n\r\n        let newWindow = window.open(link);\r\n        let timer = setInterval(() => {\r\n            if (newWindow.closed) {\r\n                clearInterval(timer);\r\n                axios\r\n                    .get('api/me', {\r\n                        headers: { Authorization: `JWT ${accessString}` },\r\n                    })\r\n                    .then(response => {\r\n                        this.setState({\r\n                            connected: response.data.spotifyAuth,\r\n                            isLoading: false,\r\n                        });\r\n                    });\r\n            }\r\n        }, 1500);\r\n    }\r\n\r\n    async updatePlaylists() {\r\n        let accessString = localStorage.getItem('jwtToken');\r\n        await axios\r\n            .get('api/spotify/sync', {\r\n                headers: { Authorization: `JWT ${accessString}` },\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    playlists: response.data,\r\n                });\r\n            });\r\n    }\r\n\r\n    async syncPlaylist(playlist) {\r\n        let accessString = localStorage.getItem('jwtToken');\r\n        await axios.post(\r\n            'api/spotify/sync/playlist',\r\n            {\r\n                spotifyPlaylistName: playlist,\r\n            },\r\n            { headers: { Authorization: `JWT ${accessString}` } }\r\n        );\r\n    }\r\n\r\n    handleShow = () => this.setState({ active: true });\r\n    handleHide = () => this.setState({ active: false });\r\n\r\n    render() {\r\n        if (this.state.connected) {\r\n            return (\r\n                    <Card fluid>\r\n                        <Card.Content>\r\n                            <Card.Header>\r\n                                <FontAwesomeIcon icon={faSpotify} /> Spotify\r\n                            </Card.Header>\r\n                        </Card.Content>\r\n                        <Card.Content>\r\n                            <Button\r\n                                className=\"green\"\r\n                                loading={this.state.isLoading}\r\n                                onClick={this.updatePlaylists}\r\n                            >\r\n                                Update Playlists\r\n                            </Button>\r\n                        </Card.Content>\r\n                        <Card.Content>\r\n                            <List>\r\n                                {this.state.playlists.length > 0 &&\r\n                                    this.state.playlists.map(\r\n                                        (playlist, index) => {\r\n                                            return (\r\n                                                <List.Item\r\n                                                    key={playlist.name + index}\r\n                                                >\r\n                                                    <Button\r\n                                                        onClick={() =>\r\n                                                            this.syncPlaylist(\r\n                                                                playlist.name\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        Sync {playlist.name} (\r\n                                                        {playlist.total ||\r\n                                                            playlist.number_of_songs}{' '}\r\n                                                        songs)\r\n                                                    </Button>\r\n                                                    <Progress\r\n                                                        percent={0}\r\n                                                        indicating\r\n                                                    />\r\n                                                </List.Item>\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                            </List>\r\n                        </Card.Content>\r\n                    </Card>\r\n            );\r\n        } else {\r\n            return (\r\n                <Card fluid>\r\n                    <Card.Content>\r\n                        <Card.Header>\r\n                            <FontAwesomeIcon icon={faSpotify} /> Spotify\r\n                        </Card.Header>\r\n                    </Card.Content>\r\n                    <Card.Content>\r\n                        <Button\r\n                            className=\"green\"\r\n                            loading={this.state.isLoading}\r\n                            onClick={this.connectSpotify}\r\n                        >\r\n                            Connect Spotify\r\n                        </Button>\r\n                    </Card.Content>\r\n                </Card>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SpotifyInfo;\r\n","import React, { Component } from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass AccountInfo extends Component {\r\n    render() {\r\n        return (\r\n            <Card fluid>\r\n                <Card.Content>\r\n                    <Card.Header>\r\n                        <FontAwesomeIcon icon={faUser} /> Account Information\r\n                    </Card.Header>\r\n                </Card.Content>\r\n                <Card.Content style={{ wordWrap: 'break-word' }}>\r\n                    <strong>id</strong>: {this.props.user.id}\r\n                    <br />\r\n                    <strong>username</strong>: {this.props.user.username}\r\n                    <br />\r\n                    <strong>email</strong>: {this.props.user.email}\r\n                    <br />\r\n                    <strong>password</strong>: {this.props.user.password}\r\n                    <br />\r\n                </Card.Content>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountInfo;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    GridColumn,\r\n    GridRow,\r\n    Button,\r\n    Divider,\r\n} from 'semantic-ui-react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAnchor } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Navbar from '../components/Navbar';\r\nimport ProfilePlaylistInfo from '../components/ProfilePlaylistInfo';\r\nimport ProfileSpotifyInfo from '../components/ProfileSpotifyInfo';\r\nimport ProfileAccountInfo from '../components/ProfileAccountInfo';\r\n\r\nclass ProfileInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout(e) {\r\n        this.setState({ auth: false });\r\n        localStorage.removeItem('jwtToken');\r\n    }\r\n    render() {\r\n        const {\r\n            id,\r\n            username,\r\n            email,\r\n            password,\r\n            auth,\r\n            spotifyAuth,\r\n            error,\r\n            isLoading,\r\n        } = this.props.state;\r\n        if (isLoading) {\r\n            return <div>Loading...</div>;\r\n        } else if (!error && auth) {\r\n            return (\r\n                <Container\r\n                    fluid={true}\r\n                    style={{\r\n                        paddingTop: '20px',\r\n                        textAlign: 'left',\r\n                        maxWidth: '1400px',\r\n                    }}\r\n                >\r\n                    <Grid centered style={{ paddingBottom: '1rem' }}>\r\n                        <GridRow style={{ paddingBottom: '0.5rem' }}>\r\n                            <h1>\r\n                                <FontAwesomeIcon icon={faAnchor} /> Profile Page\r\n                            </h1>\r\n                        </GridRow>\r\n                        <Button\r\n                            className=\"inverted red small\"\r\n                            onClick={this.logout}\r\n                            href=\"/\"\r\n                        >\r\n                            Logout\r\n                        </Button>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid centered columns=\"equal\">\r\n                        <GridColumn width={5} className=\"ml-auto\">\r\n                            <GridRow style={{ paddingBottom: '20px' }}>\r\n                                <ProfileAccountInfo\r\n                                    user={{\r\n                                        id: id,\r\n                                        username: username,\r\n                                        email: email,\r\n                                        password: password,\r\n                                    }}\r\n                                />\r\n                            </GridRow>\r\n\r\n                            <GridRow>\r\n                                <ProfilePlaylistInfo\r\n                                    playlists={this.props.state.searchPlaylists}\r\n                                />\r\n                            </GridRow>\r\n                        </GridColumn>\r\n                        <GridColumn width={5} className=\"mr-auto\">\r\n                            <ProfileSpotifyInfo\r\n                                spotifyAuth={spotifyAuth}\r\n                                playlists={this.props.state.syncPlaylists}\r\n                            />\r\n                        </GridColumn>\r\n                    </Grid>\r\n                </Container>\r\n            );\r\n        } else if (!auth) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n    }\r\n}\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            syncPlaylists: [],\r\n            searchPlaylists: [],\r\n            auth: false,\r\n            spotifyAuth: false,\r\n            isLoading: true,\r\n            error: false,\r\n        };\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let accessString = localStorage.getItem('jwtToken');\r\n        if (accessString === null) {\r\n            this.setState({\r\n                isLoading: false,\r\n                error: true,\r\n            });\r\n        }\r\n        await axios\r\n            .get('api/me', {\r\n                headers: { Authorization: `JWT ${accessString}` },\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    id: response.data.id,\r\n                    username: response.data.username,\r\n                    email: response.data.email,\r\n                    password: response.data.password,\r\n                    syncPlaylists: response.data.syncPlaylists,\r\n                    auth: response.data.auth,\r\n                    spotifyAuth: response.data.spotifyAuth,\r\n                    isLoading: false,\r\n                    error: false,\r\n                });\r\n            });\r\n    }\r\n\r\n    handleSearch = searchPlaylists => {\r\n        this.setState({\r\n            searchPlaylists,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar\r\n                    location={this.props.location}\r\n                    user={this.state.username}\r\n                    sendDataToParent={this.handleSearch}\r\n                    \r\n                />\r\n                <ProfileInfo state={this.state} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Player from 'react-youtube';\r\nimport socketIOClient from 'socket.io-client';\r\nimport {\r\n    Button,\r\n    Container,\r\n    Grid,\r\n    GridColumn,\r\n    GridRow,\r\n    Tab,\r\n    Menu,\r\n    Card,\r\n} from 'semantic-ui-react';\r\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\r\nimport { Helmet } from 'react-helmet';\r\nimport './Youtube.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\r\nimport Navbar from '../components/Navbar';\r\nconst AsyncTypeahead = asyncContainer(Typeahead);\r\n\r\nfunction Queue(props) {\r\n    if (props.videoPlaylist.length > 0) {\r\n        return (\r\n            <div>\r\n                {props.videoPlaylist.map((video, index) => {\r\n                    return (\r\n                        <div\r\n                            className=\"ui small image\"\r\n                            style={{\r\n                                textAlign: 'center',\r\n                                marginTop: '5px',\r\n                                paddingLeft: '5px',\r\n                                paddingRight: '5px',\r\n                                whiteSpace: 'normal',\r\n                                verticalAlign: 'top',\r\n                            }}\r\n                        >\r\n                            <Button\r\n                                as=\"a\"\r\n                                className=\"ui red right corner label\"\r\n                                style={{\r\n                                    overflow: 'hidden',\r\n                                    marginLeft: '5px',\r\n                                    marginRight: '5px',\r\n                                }}\r\n                                onClick={() => props.removeFromQueue(index)}\r\n                            >\r\n                                <i className=\"times circle icon\" />\r\n                            </Button>\r\n                            <img\r\n                                className=\"ui small rounded centered image\"\r\n                                src={video.thumbnail}\r\n                            />\r\n                            <p style={{ color: 'white' }}>\r\n                                {video.title.substring(\r\n                                    0,\r\n                                    video.title.length > 35\r\n                                        ? 35\r\n                                        : video.title.length\r\n                                )}\r\n                            </p>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n    return <div />;\r\n}\r\n\r\nfunction PlaylistSongs(props, handleClick) {\r\n    let panes = [];\r\n    props.map((playlist, index) => {\r\n        panes[index] = {};\r\n        panes[index].menuItem = playlist[0].playlist_name;\r\n        panes[index].render = () => (\r\n            <Tab.Pane\r\n                inverted\r\n                style={{\r\n                    height: '615px',\r\n                    overflowY: 'scroll',\r\n                }}\r\n            >\r\n                <Menu\r\n                    vertical\r\n                    inverted\r\n                    size=\"tiny\"\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                >\r\n                    {playlist.map((song, songIndex) => (\r\n                        <Menu.Item\r\n                            key={playlist[0].playlist_name + songIndex}\r\n                            onClick={() => {\r\n                                handleClick(\r\n                                    `${song.song_name} - ${song.artist_name}`\r\n                                );\r\n                            }}\r\n                        >\r\n                            {song.song_name} - {song.artist_name}\r\n                        </Menu.Item>\r\n                    ))}\r\n                </Menu>\r\n            </Tab.Pane>\r\n        );\r\n    });\r\n    return panes;\r\n}\r\n\r\nclass Youtube extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchString: '',\r\n            videoId: '',\r\n            username: '',\r\n            userPlaylists: [],\r\n            videoPlaylist: [],\r\n            isLoading: true,\r\n            player: null,\r\n            options: [],\r\n            socket: undefined,\r\n            width: 0,\r\n            height: 0,\r\n            host: false,\r\n        };\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n        this.onReady = this.onReady.bind(this);\r\n        this.searchSong = this.searchSong.bind(this);\r\n        this.nextSong = this.nextSong.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.removeFromQueue = this.removeFromQueue.bind(this);\r\n        this.clearQueue = this.clearQueue.bind(this);\r\n        this.syncHost = this.syncHost.bind(this);\r\n        this.handlePlaylistClick = this.handlePlaylistClick.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        document.body.style.background = '#202124';\r\n        let accessString = localStorage.getItem('jwtToken');\r\n        await axios\r\n            .get('api/me', {\r\n                headers: { Authorization: `JWT ${accessString}` },\r\n            })\r\n            .then(response => {\r\n                if (response !== null)\r\n                    this.setState({\r\n                        username: response.data.username,\r\n                    });\r\n            });\r\n        if (this.state.username !== undefined)\r\n            await axios\r\n                .get(`api/user/playlists?user=${this.state.username}`)\r\n                .then(response => {\r\n                    if (response !== null)\r\n                        this.setState({\r\n                            userPlaylists: response.data,\r\n                        });\r\n                })\r\n                .then(() => this.sortSongs());\r\n        const socket = socketIOClient();\r\n        this.setState({\r\n            socket: socket,\r\n        });\r\n        socket.emit('new room', data => {\r\n            this.setState({\r\n                videoId: data.videoId,\r\n                host: data.host,\r\n                isLoading: false,\r\n            });\r\n        });\r\n        socket.on('get queue', data => {\r\n            this.setState({\r\n                videoPlaylist: data.queue,\r\n                videoId:\r\n                    data.videoId === null ? this.state.videoId : data.videoId,\r\n                searchString: '', //maybe move this somewhere else\r\n            });\r\n        });\r\n        socket.on('restart video', () => {\r\n            this.state.player.seekTo(0, true);\r\n        });\r\n        socket.on('sync client video', data => {\r\n            let currentTime = this.state.player.getCurrentTime();\r\n            if (Math.abs(currentTime - data.currentTime) > 0.2) {\r\n                this.state.player.seekTo(data.currentTime);\r\n                this.state.player.playVideo();\r\n            }\r\n        });\r\n        socket.on('sync client player state', data => {\r\n            let currentState = this.state.player.getPlayerState();\r\n            if (data.playerState === 1) {\r\n                if (currentState === -1 || currentState === 2) {\r\n                    this.state.player.playVideo();\r\n                }\r\n            } else this.state.player.pauseVideo();\r\n        });\r\n        socket.on('sync host', data => {\r\n            this.state.socket.emit('sync video', {\r\n                currentTime: this.state.player.getCurrentTime(),\r\n                requestingSocket:\r\n                    data.requestingSocket !== undefined\r\n                        ? data.requestingSocket\r\n                        : undefined,\r\n            });\r\n        });\r\n        socket.on('pinging', () => {\r\n            socket.emit('ponging');\r\n        });\r\n    }\r\n    playerSeek(time) {\r\n        this.state.player.seekTo(time);\r\n    }\r\n    onReady(e) {\r\n        this.setState({\r\n            player: e.target,\r\n        });\r\n        this.state.player.setVolume(25);\r\n    }\r\n\r\n    onStateChange(player) {\r\n        switch (player.data) {\r\n            case 0:\r\n                if (this.state.videoPlaylist.length === 0) {\r\n                    this.state.socket.emit('restart video');\r\n                } else {\r\n                    this.state.socket.emit('next video');\r\n                }\r\n                break;\r\n            case 1:\r\n                this.state.socket.emit('sync player state', {\r\n                    playerState: player.data,\r\n                });\r\n                break;\r\n            case 2:\r\n                this.state.socket.emit('sync player state', {\r\n                    playerState: player.data,\r\n                });\r\n                break;\r\n            case 3:\r\n                this.state.socket.emit('sync video', {\r\n                    currentTime: this.state.player.getCurrentTime(),\r\n                });\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    sortSongs(type = 'artist asc') {\r\n        function compareArtist(a, b) {\r\n            if (a.artist_name > b.artist_name) return 1;\r\n            return -1;\r\n        }\r\n        function compareSong(a, b) {\r\n            let songA = a.song_name.toUpperCase();\r\n            let songB = b.song_name.toUpperCase();\r\n            if (songA < songB) return 1;\r\n            return -1;\r\n        }\r\n        if (this.state.userPlaylists.length > 0)\r\n            switch (type) {\r\n                case 'artist asc':\r\n                    this.setState(currentState => {\r\n                        currentState.userPlaylists.forEach(\r\n                            (playlist, index) => {\r\n                                playlist.sort(compareSong);\r\n                                playlist.sort(compareArtist);\r\n                            }\r\n                        );\r\n                        return {\r\n                            userPlaylists: currentState.userPlaylists,\r\n                        };\r\n                    });\r\n                    break;\r\n            }\r\n    }\r\n\r\n    handleInputChange = input => {\r\n        //user typing\r\n        this.setState({\r\n            searchString: input,\r\n        });\r\n    };\r\n\r\n    handleChange = input => {\r\n        //user selects menu item\r\n        if (input.length > 0)\r\n            this.setState({\r\n                searchString: input[0].song_name + ' - ' + input[0].artist_name,\r\n            });\r\n    };\r\n\r\n    handleOnKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            this.searchSong(event);\r\n        }\r\n    };\r\n    handlePlaylistClick(searchString) {\r\n        let socket = this.state.socket;\r\n        socket.emit('queue video', { search: searchString });\r\n    }\r\n    searchSong(e) {\r\n        e.preventDefault();\r\n        this.typeahead.getInstance().clear();\r\n        let socket = this.state.socket;\r\n        socket.emit('queue video', { search: this.state.searchString });\r\n    }\r\n\r\n    nextSong() {\r\n        this.onStateChange({ data: 0 });\r\n    }\r\n\r\n    clearQueue() {\r\n        let socket = this.state.socket;\r\n        socket.emit('clear queue');\r\n    }\r\n\r\n    syncHost() {\r\n        this.state.socket.emit('sync host');\r\n    }\r\n    removeFromQueue(index) {\r\n        this.state.socket.emit('update queue', { action: 'remove', index });\r\n        this.setState(currentState => {\r\n            currentState.videoPlaylist.splice(index, 1);\r\n            return {\r\n                videoPlaylist: currentState.videoPlaylist,\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const opts = {\r\n            playerVars: {\r\n                autoplay: 1,\r\n            },\r\n        };\r\n\r\n        return (\r\n            <Container fluid={true}>\r\n                <Grid centered columns=\"equal\" stackable>\r\n                    <GridRow\r\n                        centered\r\n                        columns={2}\r\n                        style={{ paddingTop: '0px', paddingBottom: '0px' }}\r\n                    >\r\n                        {/*search and add to queue row*/}\r\n                        <GridColumn width={4}>\r\n                            <div className=\"input-group\">\r\n                                <AsyncTypeahead\r\n                                    ref={typeahead =>\r\n                                        (this.typeahead = typeahead)\r\n                                    }\r\n                                    placeholder=\"Search for a song\"\r\n                                    align=\"left\"\r\n                                    autoFocus={true}\r\n                                    onInputChange={this.handleInputChange}\r\n                                    onChange={this.handleChange}\r\n                                    autoComplete=\"off\"\r\n                                    id=\"realtimeSearch\"\r\n                                    useCache={true}\r\n                                    isLoading={this.state.isLoading}\r\n                                    onSearch={query => {\r\n                                        this.setState({ isLoading: true });\r\n                                        axios\r\n                                            .get(`api/search?key=${query}`)\r\n                                            .then(response =>\r\n                                                this.setState({\r\n                                                    isLoading: false,\r\n                                                    options: response.data,\r\n                                                })\r\n                                            );\r\n                                    }}\r\n                                    labelKey={option => {\r\n                                        return `${option.song_name} - ${\r\n                                            option.artist_name\r\n                                        }`;\r\n                                    }}\r\n                                    options={this.state.options}\r\n                                />\r\n                                <span className=\"input-group-btn\">\r\n                                    <Button\r\n                                        className=\"inverted green small right attached\"\r\n                                        type=\"submit\"\r\n                                        onClick={this.searchSong}\r\n                                        onMouseDown={e => e.preventDefault()}\r\n                                    >\r\n                                        Add to queue\r\n                                    </Button>\r\n                                </span>\r\n                            </div>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n\r\n                    <GridRow\r\n                        columns={3}\r\n                        style={{\r\n                            paddingTop: '0px',\r\n                            paddingBottom: '0px',\r\n                            height: '720px',\r\n                        }}\r\n                    >\r\n                        {' '}\r\n                        {/*player row*/}\r\n                        <GridColumn\r\n                            width={3}\r\n                            style={{\r\n                                paddingRight: '0px',\r\n                                paddingLeft: '0px',\r\n                                height: '100%',\r\n                                overflowY: 'scroll',\r\n                            }}\r\n                        />\r\n                        <GridColumn\r\n                            width={10}\r\n                            style={{\r\n                                height: '100%',\r\n                                paddingLeft: '5px',\r\n                                paddingRight: '5px',\r\n                            }}\r\n                        >\r\n                            <Player\r\n                                containerClassName=\"youtubePlayer justify-content-center\"\r\n                                id=\"player\"\r\n                                videoId={this.state.videoId}\r\n                                opts={opts}\r\n                                onReady={this.onReady}\r\n                                onStateChange={this.onStateChange}\r\n                            />\r\n                            <GridRow style={{ height: '36px' }}>\r\n                                <Button\r\n                                    className=\"inverted green small\"\r\n                                    floated=\"left\"\r\n                                    onClick={this.syncHost}\r\n                                    onMouseDown={e => e.preventDefault()}\r\n                                >\r\n                                    Sync Host\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"inverted green small\"\r\n                                    floated=\"right\"\r\n                                    onClick={() => {\r\n                                        this.nextSong({ data: 0 });\r\n                                    }}\r\n                                    onMouseDown={e => e.preventDefault()}\r\n                                >\r\n                                    Next Song\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"inverted green small\"\r\n                                    floated=\"right\"\r\n                                    onClick={this.clearQueue}\r\n                                    onMouseDown={e => e.preventDefault()}\r\n                                >\r\n                                    Clear queue\r\n                                </Button>\r\n                            </GridRow>\r\n                            <GridRow\r\n                                style={{\r\n                                    whiteSpace: 'nowrap',\r\n                                }}\r\n                            >\r\n                                <Card\r\n                                    style={{\r\n                                        backgroundColor: '#202124',\r\n                                        borderColor: '#202124',\r\n                                        visibility:\r\n                                            this.state.videoPlaylist.length ===\r\n                                            0\r\n                                                ? 'hidden'\r\n                                                : 'visible',\r\n                                        display: 'flex',\r\n                                        minWidth: '100%',\r\n                                        overflowX: 'scroll',\r\n                                    }}\r\n                                >\r\n                                    <Queue\r\n                                        videoPlaylist={this.state.videoPlaylist}\r\n                                        removeFromQueue={this.removeFromQueue}\r\n                                    />\r\n                                </Card>\r\n                            </GridRow>\r\n                        </GridColumn>\r\n                        <GridColumn\r\n                            width={3}\r\n                            style={{\r\n                                paddingRight: '0px',\r\n                                paddingLeft: '0px',\r\n                                height: '100%',\r\n                            }}\r\n                        >\r\n                            <Tab\r\n                                menu={{\r\n                                    inverted: true,\r\n                                    attached: true,\r\n                                    tabular: false,\r\n                                }}\r\n                                style={{ height: '100%', paddingRight: '20px' }}\r\n                                panes={[\r\n                                    {\r\n                                        menuItem: 'Chat',\r\n                                        render: () => (\r\n                                            <Tab.Pane\r\n                                                inverted\r\n                                                style={{ height: '680px' }}\r\n                                            >\r\n                                                Placeholder\r\n                                            </Tab.Pane>\r\n                                        ),\r\n                                    },\r\n                                    {\r\n                                        menuItem: 'Playlists',\r\n                                        render: () => {\r\n                                            if (\r\n                                                this.state.userPlaylists\r\n                                                    .length > 0\r\n                                            )\r\n                                                return (\r\n                                                    <Tab\r\n                                                        size=\"small\"\r\n                                                        menu={{\r\n                                                            inverted: true,\r\n                                                            attached: false,\r\n                                                            secondary: true,\r\n                                                        }}\r\n                                                        style={{\r\n                                                            height: '100%',\r\n                                                        }}\r\n                                                        panes={PlaylistSongs(\r\n                                                            this.state\r\n                                                                .userPlaylists,\r\n                                                            this\r\n                                                                .handlePlaylistClick\r\n                                                        )}\r\n                                                    />\r\n                                                );\r\n                                            return (\r\n                                                <Tab.Pane\r\n                                                    inverted\r\n                                                    style={{ height: '680px' }}\r\n                                                >\r\n                                                    Login or Signup and sync\r\n                                                    your Spotify playlists to\r\n                                                    view your playlists.\r\n                                                </Tab.Pane>\r\n                                            );\r\n                                        },\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                    <GridRow\r\n                        centered\r\n                        columns={3}\r\n                        style={{ paddingTop: '10px' }}\r\n                    >\r\n                        {' '}\r\n                        {/*placeholder, row under video*/}\r\n                        <GridColumn\r\n                            width={10}\r\n                            style={{ paddingRight: '0px', paddingLeft: '0px' }}\r\n                        >\r\n                            <Grid\r\n                                columns={2}\r\n                                className=\"mt-0\"\r\n                                style={{ paddingTop: '0px' }}\r\n                            >\r\n                                <GridColumn\r\n                                    width={14}\r\n                                    style={{\r\n                                        paddingRight: '0px',\r\n                                        paddingTop: '0px',\r\n                                    }}\r\n                                />\r\n                                <GridColumn\r\n                                    width={2}\r\n                                    style={{\r\n                                        paddingLeft: '0px',\r\n                                        paddingTop: '0px',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </GridColumn>\r\n                    </GridRow>\r\n                </Grid>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nclass Page extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Helmet>\r\n                    <title>Youtube Room</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"Add songs to the queue and listen to music with friends.\"\r\n                    />\r\n                </Helmet>\r\n                <Navbar location={this.props.location} />\r\n                <Youtube />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Page;\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass AfterAuth extends Component {\r\n\r\n    componentDidMount() {\r\n        window.opener.focus();\r\n        window.close()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AfterAuth\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './containers/Home';\r\nimport Signup from './containers/Signup';\r\nimport Login from './containers/Login';\r\nimport Profile from './containers/Profile';\r\nimport Youtube from './containers/Youtube';\r\nimport AfterAuth from './containers/AfterAuth';\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />}\r\n                    <Route exact path=\"/signup\" component={Signup} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/profile\" component={Profile} />\r\n                    <Route exact path=\"/youtube\" component={Youtube} />\r\n                    <Route exact path=\"/api/after-auth\" component={AfterAuth} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport Routes from '../routes'\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Routes />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './containers/App'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}