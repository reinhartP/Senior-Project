<!DOCTYPE html>
<html>
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <style type="text/css">
        body {background: #202124 !important;}
    </style>
</head>
  <body>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div class="d-flex justify-content-center">
        <div class="p-4">
            <form class="form-inline my-2 my-lg-0">
              <input class="form-control mr-sm-2" type="form" id="searchYoutube" name="search" placeholder="Search for a song">
              <button type="button" id="searchButton" class="btn btn-outline-success my-2 my-sm-0">Search</button>
            </form>
        </div>
        
        <div class="p-4" id="player"></div>
    </div>

    
    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "http://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      var videoId = "<%=data.videoId%>";
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '720',
          width: '1280',
          videoId: videoId,
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = true;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(() => player.loadVideoById({videoId: '0n8WM3wuhxc',suggestedQuality: 'large',}), 6000);
          done = true;
        }

      }
      function stopVideo() {
        player.loadVideoById({
            videoId: 'B1yA0XcJi3U',
            suggestedQuality: 'large',
        });
      }
    </script>
    <script>
      $('[id^="searchButton"').click(function() {
      let text = document.getElementById("searchYoutube").value;
      let search = text;
      var searchResult;
      $.ajax({
    url: 'api/youtube/search',
    data: {
      search: search,
    },
    success: (data) => {
      player.loadVideoById({videoId: data.videoId});
      searchResult=data.videoId;
    },
    dataType: 'json'
    });
})
  
    
</script>
  </body>
</html>